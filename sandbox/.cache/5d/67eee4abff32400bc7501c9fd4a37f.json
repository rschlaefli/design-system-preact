{"id":"node_modules/tailwind-merge/dist/tailwind-merge.mjs","dependencies":[{"name":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs.map","includedInParent":true,"mtime":1683028207400},{"name":"/home/roland/git/ibf/design-system-preact/package.json","includedInParent":true,"mtime":1683028155318},{"name":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/package.json","includedInParent":true,"mtime":1683028206578},{"name":"./lib/tw-join.mjs","loc":{"line":2,"column":23,"index":67},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/tw-join.mjs"},{"name":"./lib/tw-merge.mjs","loc":{"line":3,"column":24,"index":112},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/tw-merge.mjs"},{"name":"./lib/default-config.mjs","loc":{"line":4,"column":33,"index":167},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/default-config.mjs"},{"name":"./lib/extend-tailwind-merge.mjs","loc":{"line":5,"column":36,"index":231},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/extend-tailwind-merge.mjs"},{"name":"./lib/create-tailwind-merge.mjs","loc":{"line":6,"column":36,"index":302},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/create-tailwind-merge.mjs"},{"name":"./lib/validators.mjs","loc":{"line":7,"column":28,"index":365},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/validators.mjs"},{"name":"./lib/merge-configs.mjs","loc":{"line":9,"column":29,"index":441},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/merge-configs.mjs"},{"name":"./lib/from-theme.mjs","loc":{"line":10,"column":26,"index":494},"parent":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/tailwind-merge.mjs","resolved":"/home/roland/git/ibf/design-system-preact/node_modules/tailwind-merge/dist/lib/from-theme.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createTailwindMerge\", {\n  enumerable: true,\n  get: function () {\n    return _createTailwindMerge.createTailwindMerge;\n  }\n});\nObject.defineProperty(exports, \"extendTailwindMerge\", {\n  enumerable: true,\n  get: function () {\n    return _extendTailwindMerge.extendTailwindMerge;\n  }\n});\nObject.defineProperty(exports, \"fromTheme\", {\n  enumerable: true,\n  get: function () {\n    return _fromTheme.fromTheme;\n  }\n});\nObject.defineProperty(exports, \"getDefaultConfig\", {\n  enumerable: true,\n  get: function () {\n    return _defaultConfig.getDefaultConfig;\n  }\n});\nexports.join = void 0;\nObject.defineProperty(exports, \"mergeConfigs\", {\n  enumerable: true,\n  get: function () {\n    return _mergeConfigs.mergeConfigs;\n  }\n});\nObject.defineProperty(exports, \"twJoin\", {\n  enumerable: true,\n  get: function () {\n    return _twJoin.twJoin;\n  }\n});\nObject.defineProperty(exports, \"twMerge\", {\n  enumerable: true,\n  get: function () {\n    return _twMerge.twMerge;\n  }\n});\nexports.validators = void 0;\nvar _twJoin = require(\"./lib/tw-join.mjs\");\nvar _twMerge = require(\"./lib/tw-merge.mjs\");\nvar _defaultConfig = require(\"./lib/default-config.mjs\");\nvar _extendTailwindMerge = require(\"./lib/extend-tailwind-merge.mjs\");\nvar _createTailwindMerge = require(\"./lib/create-tailwind-merge.mjs\");\nvar validators = _interopRequireWildcard(require(\"./lib/validators.mjs\"));\nexports.validators = validators;\nvar _mergeConfigs = require(\"./lib/merge-configs.mjs\");\nvar _fromTheme = require(\"./lib/from-theme.mjs\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/**\r\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\r\n */\nvar join = _twJoin.twJoin;\nexports.join = join;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":61,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":63,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":16,"column":7},"generated":{"line":64,"column":0}},{"source":"../src/index.ts","name":"join","original":{"line":16,"column":13},"generated":{"line":64,"column":4}},{"source":"../src/index.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":64,"column":8}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":64,"column":11}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":64,"column":25}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":65,"column":0}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":65,"column":7}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":65,"column":8}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":65,"column":12}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":65,"column":15}},{"source":"../src/index.ts","name":"twJoin","original":{"line":16,"column":20},"generated":{"line":65,"column":19}}],"sources":{"../src/index.ts":"import { twJoin } from './lib/tw-join'\n\nexport { twMerge } from './lib/tw-merge'\nexport { twJoin } from './lib/tw-join'\nexport { getDefaultConfig } from './lib/default-config'\nexport { extendTailwindMerge } from './lib/extend-tailwind-merge'\nexport { createTailwindMerge } from './lib/create-tailwind-merge'\nexport type { Config } from './lib/types'\nexport * as validators from './lib/validators'\nexport { mergeConfigs } from './lib/merge-configs'\nexport { fromTheme } from './lib/from-theme'\n\n/**\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\n */\nexport const join = twJoin\n"},"lineCount":null}},"error":null,"hash":"f1f6aef517cacba9a43a852e82374b23","cacheData":{"env":{}}}